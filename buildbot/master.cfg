# -*- python -*-
# ex: set syntax=python:

from buildbot.buildslave import BuildSlave
from buildbot.process.factory import BuildFactory
from buildbot.config import BuilderConfig
from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.changes import filter
from buildbot.status import html
import os
import hashlib
import hmac

# confidentials
DOCKER_DB_PASSWORD = os.environ['DOCKER_DB_PASSWORD']
BUILDBOT_SECRET = os.environ['BUILDBOT_SECRET']

def gen_pw(name):
    return hmac.new(BUILDBOT_SECRET, name, hashlib.sha512).hexdigest()

# our config object
c = BuildmasterConfig = {}

c['protocols'] = {'pb': {'port': 9989}}

c['buildbotURL'] = 'http://diax.overviewer.org/build/'
c['status'] = [
    html.WebStatus(
        http_port=8010,
        change_hook_dialects={'github': True},
    ),
]

c['db'] = {
    'db_url': 'postgresql://postgres:' + DOCKER_DB_PASSWORD + '@postgres/bbmaster',
}

# high-level slave list
# slaves[name] = [... list of builders ...]
slaves = {
    'diax_wheezy64': ['src', 'deb64'],
}

c['slaves'] = []
builders_to_slaves = {}
for name, builders in slaves.items():
    c['slaves'].append(BuildSlave(name, gen_pw(name)))
    for builder in builders:
        builders_to_slaves.setdefault(builder, list()).append(name)

c['schedulers'] = [
    SingleBranchScheduler(
        name='Overviewer Master Scheduler',
        change_filter=filter.ChangeFilter(branch='master'),
        treeStableTimer=None,
        builderNames=['src'],
    ),
]

# high-level builder list
# builders[name] = dict(**kwargs)
builders = {}

sdist = BuildFactory()
builders['src'] = dict(factory=sdist)

c['builders'] = []
for name, kwargs in builders.items():
    slaves = builders_to_slaves.get(name, [])
    c['builders'].append(BuilderConfig(name=name, slavenames=slaves, **kwargs))

