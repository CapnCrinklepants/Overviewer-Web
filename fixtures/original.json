[{"pk": 5, "model": "flatpages.flatpage", "fields": {"registration_required": false, "title": "flat home", "url": "/", "template_name": "", "sites": [1], "content": "this page is temporary", "enable_comments": false}}, {"pk": 2, "model": "flatpages.flatpage", "fields": {"registration_required": false, "title": "Overviewer.org APT Repository", "url": "/debian/info/", "template_name": "", "sites": [1], "content": "Overviewer.org APT Repository\r\n=============================\r\n\r\nThis is the Overviewer.org APT Repository, which hosts frequent builds\r\nof Minecraft Overviewer for use on Debian-based systems, such as\r\nUbuntu or Debian itself. In order to use this repository, add the\r\nfollowing line to your `/etc/apt/sources.list`:\r\n\r\n~~~~{.raw}\r\ndeb http://overviewer.org/debian ./\r\n~~~~\r\n\r\nThen, run `apt-get update` as root to update your repository information.\r\n\r\nInstalling Overviewer is as simple as running `apt-get install\r\nminecraft-overviewer`. Since this repository is updated at the same\r\ntime as the Windows builds on GitHub, you can also upgrade through\r\nAPT. To upgrade, run `apt-get update`, then `apt-get install\r\nminecraft-overviewer` again.\r\n", "enable_comments": false}}, {"pk": 3, "model": "flatpages.flatpage", "fields": {"registration_required": false, "title": "Overviewer on Freenode", "url": "/irc/", "template_name": "", "sites": [1], "content": "Overviewer on Freenode\r\n----------------------\r\n\r\nJoin us on irc.freenode.net in\r\n[#overviewer](http://webchat.freenode.net/?channels=overviewer).\r\n\r\nWe have a [bot](bot)!\r\n\r\n<iframe src=\"http://webchat.freenode.net?channels=overviewer\" width=\"647\" height=\"400\"></iframe>\r\n", "enable_comments": false}}, {"pk": 4, "model": "flatpages.flatpage", "fields": {"registration_required": false, "title": "EmceeOverviewer Help", "url": "/irc/bot/", "template_name": "", "sites": [1], "content": "EmceeOverviewer Help\r\n====================\r\n\r\nOur [#overviewer][] IRC channel has a customized bot named\r\n*EmceeOverviewer*, which is able to do a lot of interesting and\r\nhelpful things. This is an incomplete list of the things it can do.\r\n\r\n[TOC]\r\n\r\n [#overviewer]: ./\r\n\r\nEmceeOverviewer is [free software][], and may be found on\r\n[GitHub][]. Some of the more specialized commands (like `build` and\r\n`render`) are not in the public source, because the code is ugly\r\nand/or contains location-specific hacks.\r\n\r\n [free software]: http://www.gnu.org/philosophy/free-sw.html\r\n [GitHub]: https://github.com/agrif/hesperus\r\n\r\nIssuing Commands\r\n----------------\r\n\r\nThere are 3 primary ways to issue commands to EmceeOverviewer. The\r\nclassic way is much like addressing him directly:\r\n\r\n~~~~{.raw}\r\nEmceeOverviewer, <command>\r\n~~~~\r\n\r\nEmceeOverviewer will also respond to the names \"emcee\" and \"mco\", and\r\nwill accept a colon or space instead of a comma. So, all of the\r\nfollowing are acceptable:\r\n\r\n~~~~{.raw}\r\nEmceeOverviewer: <command>\r\nemcee, <command>\r\nmco <command>\r\n~~~~\r\n\r\nYou may also issue commands by prefixing the command with a \"!\", for\r\nexample:\r\n\r\n~~~~{.raw}\r\n!<command>\r\n~~~~\r\n\r\nIf you want to issue a (usually short) command inside a more general\r\nmessage, you can surround any command with parenthesis \"()\" or\r\nbrackets \"[]\" to issue an *inline* command. For example:\r\n\r\n~~~~{.raw}\r\nHey, check out this (!<command>) cool link!\r\nI'll render that for you. [emcee, <command>]\r\n~~~~\r\n\r\nIf you want to issue a command but don't want to spam up the channel,\r\nuse private messages. If you use PMs, you don't need any special\r\nsyntax for commands, just use the command name:\r\n\r\n~~~~{.raw}\r\n/msg EmceeOverviewer <command>\r\n~~~~\r\n\r\nAll of these forms work with all commands, so do whatever seems best\r\nto you.\r\n\r\nConvenience Commands\r\n--------------------\r\n\r\n* `google <query>` -- provides a link to a Google search for\r\n  `<query>`.\r\n* `alpha <query>`, `wa <query>`, `= <query>` -- does a Wolfram Alpha computation\r\n* `hesperus` -- provide a link to the current [bot sources][GitHub].\r\n* `help` -- provide a link to this guide.\r\n* `dtt`, `dttguide` -- provide a link to the\r\n  [DTT Upgrade Guide](https://github.com/overviewer/Minecraft-Overviewer/wiki/DTT-Upgrade-Guide).\r\n* `quickstart`, `guide` -- provide a link to the\r\n  [Quick Start Guide](https://github.com/overviewer/Minecraft-Overviewer/wiki/Quick-Start-Guide).\r\n* `rmo`, `rmoguide` -- provide a link to the [Rendermode Options Guide](https://github.com/overviewer/Minecraft-Overviewer/wiki/Rendermode-Options-Guide).\r\n* `example`, `exmaple` -- checkout and zip the latest exmaple (example map).\r\n* `terrain` -- give the most up-to-date SHA1 hash of terrain.png\r\n* `ddate` -- returns the current date on the\r\n  [Discordian Calendar](http://en.wikipedia.org/wiki/Discordian_calendar).\r\n* `fortune` -- print a random, hopefully interesting, adage ([man fortune 6](http://linux.die.net/man/6/fortune))\r\n* `roll` -- rolls virtual dice, given a dice string (based on [rolldice](http://gitorious.org/debian-packages/rolldice))\r\n\r\nGitHub Integration and Commands\r\n-------------------------------\r\n\r\nEmceeOverviewer will announce GitHub events (like pushes, open issues,\r\n...) to the channel as they happen, for\r\n[all repositories he follows on GitHub][emcee-github]. If you want to\r\nbe added to this list, just ask agrif (Emcee's operator).\r\n\r\n [emcee-github]: https://github.com/EmceeOverviewer\r\n\r\nIn addition to announcing events, Emcee also supports a few\r\nconvenience commands.\r\n\r\n### Searching Issues\r\n\r\nTo do a search for a specific issue number, use `issue <num>`. Emcee\r\nalso supports `issue #<num>`. If you want to search by phrase instead,\r\nuse `issue <phrase>`, where `<phrase>` can be anything (even including\r\nspaces!).\r\n\r\nIf you want to search on something other than the main repo, put\r\n`on <username>` at the end to search through that user's repo issues\r\ninstead. For example,\r\n\r\n~~~~{.raw}\r\n!issue blocks on agrif\r\n~~~~\r\n\r\nwill search for issue with the phrase \"blocks\" on agrif's repo. This\r\nworks with issue numbers too, and will also accept \"in\", \"for\", or\r\n\"of\" instead of \"on\". The `pull` command is an alias for `issue`.\r\n\r\n### Linking to Specific Lines\r\n\r\nYou can have Emcee generate a link to a specific file and line by\r\nissuing a command of the form `<filename>:<lineno>`. For example, to\r\nlink to line #50 of `chunk.py`, you could issue:\r\n\r\n~~~~{.raw}\r\n!chunk.py:50\r\n~~~~\r\n\r\nLike the `issue` command, this supports the \"in\", \"for\", \"of\", \"on\"\r\nsyntax to select a specific user's repo.\r\n\r\nThis is particularly useful as an inline command. For example:\r\n\r\n~~~~{.raw}\r\nHey, what does this line do? (!src/overviewer.h:12)\r\n~~~~\r\n\r\nBuilding Overviewer Packages\r\n----------------------------\r\n\r\n(Note: *right now, for safety reasons, this command is\r\nrestricted-access. If you want to be put on the access list, just ask\r\nagrif*)\r\n\r\nEmcee is able to build py2exe and debian packages (and possibly other\r\nbinary packages) automatically, on command. To have Emcee build\r\nsomething for you, use `build <target>`. Run `build` (with no targets)\r\nto get a list of supported targets.\r\n\r\nIf you want to build something other than the default sources, you can\r\nadd a repo user and commit to the build command. For example,\r\n\r\n~~~~{.raw}\r\nbuild <target> agrif\r\n~~~~\r\n\r\nwill build the \"master\" branch on agrif's repo, and\r\n\r\n~~~~{.raw}\r\nbuild <target> agrif/some-branch\r\n~~~~\r\n\r\nwill build the \"some-branch\" branch on agrif's repo.\r\n\r\n### Uploading Packages\r\n\r\nEmcee now has the ability to build and upload a bunch of targets at\r\nonce, to facilitate releasing new versions of Overviewer. The basic\r\ncommand is `upload`, which will build and upload every available\r\ntarget. Windows packages are uploaded to [GitHub][gh-downloads], and\r\ndebian packages are uploaded to the [overviewer.org APT repository][apt].\r\n\r\n [gh-downloads]: https://github.com/overviewer/Minecraft-Overviewer/downloads\r\n [apt]: /debian/info\r\n\r\nLike `build`, `upload` also takes a `repo/branch` as an optional\r\nargument if you wish to release something other than\r\n`overviewer/master`. In this case, Windows builds are uploaded to the\r\nappropriate repository.\r\n\r\nFinally, you can specify what targets you want to upload:\r\n\r\n~~~~{.raw}\r\nupload targets deb32 deb64\r\nupload agrif targets win*\r\n~~~~\r\n\r\nThe target list supports shell-style globbing.\r\n\r\n`release` is an alias for `upload`, and both commands require\r\nconfirmation before doing anything, as a precaution.\r\n\r\nRendering the Exmaple\r\n---------------------\r\n\r\nIn addition to building packages, Emcee can also do render tests on\r\ncommand. To generate a test render, run `render`. Like the `build`\r\ncommand, `render` also supports specifying a user and commit.\r\n\r\nRenders generated this way will always have all rendermodes enabled,\r\nbut will otherwise be completely unmodified.\r\n\r\nRecently I added support for providing options to each render. Just\r\nprovide them after the command like you would on the command\r\nline. Because of this new flexibility, this command is now limited to\r\npeople with `build` access.\r\n\r\nFor example,\r\n\r\n~~~~{.raw}\r\n!render overviewer --north-direction=\"upper-left\"\r\n~~~~\r\n", "enable_comments": false}}]